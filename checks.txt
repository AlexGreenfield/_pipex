EX1 'normal'
< infile.txt ls | cat > outfile.txt
valgrind --track-fds=all ./pipex infile.txt ls cat outfile.txt

EX2 con flags
< infile.txt ls -l | cat -e > outfile.txt
valgrind --track-fds=all ./pipex infile.txt "ls -l" "cat -e" outfile.txt

EX3 con contrabarra
< infile.txt \ls | \cat > outfile.txt
valgrind --track-fds=all ./pipex infile.txt \ls \cat outfile.txt

EX4 ruta absoluta // invalid free
< infile.txt /bin/ls | /bin/cat > outfile.txt
valgrind --track-fds=all ./pipex infile.txt /bin/ls /bin/cat outfile.txt

EX5 uno con flags y el otro no
< infile.txt ls | wc -l > outfile.txt
valgrind --track-fds=all ./pipex infile.txt ls "wc -l" outfile.txt

EX6, unos de los archivos no existe, es NULL, lo gestiona el hijo //invalid file descriptor
< "" ls | wc -l > outfile.txt
valgrind --track-fds=all ./pipex "" ls "wc -l" outfile.txt

EX7 no existe infile // bad file descriptor
< file.txt ls | wc -l > outfile.txt
valgrind --track-fds=all ./pipex file.txt ls "wc -l" outfile.txt

EX9, los archivos son NULL, lo gestionan los hijos // invalid file descriptor
< "" ls | cat > ""
valgrind --track-fds=all ./pipex "" ls cat ""

EX10, los ejecutables son NULL, lo gestionan los hijos // 1 leak
< infile.txt "" | "" > /dev/stdout
valgrind --track-fds=all ./pipex infile.txt "" "" outfile.txt

EX11, siendo /wc (en ruta relativa) un archivo en lugar de un binario ejecutable // invalid free
#!/bin/bash
ls
< infile.txt /wc | cat > outfile.txt
valgrind --track-fds=all ./pipex infile.txt /wc cat outfile.txt

EX12 // invalid free
< infile.txt ./wc | cat > outfile.txt
valgrind --track-fds=all ./pipex infile.txt ./wc cat outfile.txt

Archivo de salida /dev/stdout
